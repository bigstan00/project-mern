# # upstream backend {
# #   # List the backend servers for load balancing
# #   server localhost:3500;  # Backend service 1
# # }

# # ### Nginx load balancer example runs on port 80
# # server {
# #   listen 80 default_server;
# #   listen [::]:80 default_server;
# #   root /var/www/html;  # Root directory for serving static files
# #   server_name _;       # Default server name

# #   # Handle requests to the root URL
# #   location / {
# #     try_files $uri $uri/ =404;  # Return 404 if the file is not found
# #   }

# #   # Route all requests starting with /api to the upstream backend servers
# #   location /api {
# #     proxy_pass http://backend;  # Forward requests to the upstream backend
# #     proxy_set_header Host $host;  # Preserve the Host header
# #     proxy_set_header X-Real-IP $remote_addr;  # Pass the real client IP
# #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forwarded IP addresses
# #     proxy_set_header X-Forwarded-Proto $scheme;  # Forwarded protocol
# #   }
# # }


# http {
#     # Define upstream servers
#     upstream backend {
#         server backend:3500;  # Replace with the actual address of your backend service 
#         # You can add more backend servers here if needed, like:
#         # server backend2:3500;
#     }

#     server {
#         listen 80;  # Listen on port 80
#         server_name 18.117.73.3;  # Change to your server's domain or IP if needed

#         # Main route
#         location / {
#             proxy_pass http://backend;  # Forward requests to the upstream backend
#             proxy_set_header Host $host;  # Forward the original Host header
#             proxy_set_header X-Real-IP $remote_addr;  # Forward the real client IP
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the X-Forwarded-For header
#             proxy_set_header X-Forwarded-Proto $scheme;  # Forward the protocol (http or https)
#         }

#         # Sample endpoint
#         location /sample {
#             proxy_pass http://backend/api;  # Forward requests to the backend's API under the /api path
#         }
#     }
# }

# events{}

http {
    # Define upstream servers
    upstream backend {
        server backend:3500;  # Replace with the actual address of your backend service 
        # You can add more backend servers here if needed
    }

    server {
        listen 80;  # Listen on port 80
        server_name bstan00.xyz;  # Use a wildcard to match any server name

        # Main route
        location / {
            proxy_pass http://backend;  # Forward requests to the upstream backend
            proxy_set_header Host $host;  # Forward the original Host header
            proxy_set_header X-Real-IP $remote_addr;  # Forward the real client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the X-Forwarded-For header
            proxy_set_header X-Forwarded-Proto $scheme;  # Forward the protocol (http or https)
        }

        # Sample endpoint
        location /api {
            proxy_pass http://backend;  # Forward requests to the backend's API
        }
        
        # Optional: Handle static files (if any)
        location /static {
            alias /var/www/html/static;  # Change to the correct path for static files
        }
    }
}

events {}
