# name: CI Pipeline

# on:  
#   push:  # Trigger on push events to the master branch
#     branches:
#       - master  # Adjust to your main branch (e.g., main or master)
#   pull_request:  # Trigger on pull requests targeting the master branch
#     branches:
#       - master

# jobs:
#   build-and-test:
#     runs-on: self-hosted

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Cache Docker layers
#         uses: actions/cache@v2
#         with:
#           path: /tmp/.buildx-cache
#           key: ${{ runner.os }}-buildx-${{ github.sha }}
#           restore-keys: |
#             ${{ runner.os }}-buildx-
#       - name: Log into Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_TOKEN }}

#       - name: Build Frontend Image
#         run: |
#           cd frontend
#           docker build -t frontend:1 .
#       - name: Push Frontend Image to Docker Hub
#         run: |
#           IMAGE_NAME="bigstan00/project-mern-frontend"
#           TAG="latest"
#           # Check if the image with the latest tag already exists on Docker Hub
#           EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
#             https://hub.docker.com/v2/repositories/$IMAGE_NAME/tags/$TAG)
#           if [ "$EXISTS" -eq 200 ]; then
#             echo "Frontend image $IMAGE_NAME:$TAG already exists. Skipping push."
#             exit 0
#           else
#             echo "Frontend image not found. Pushing to Docker Hub..."
#             docker tag frontend:1 $IMAGE_NAME:$TAG
#             docker push $IMAGE_NAME:$TAG
#           fi
#       - name: Build Backend Image
#         run: |
#           cd backend
#           docker build -t backend:1 .
#       - name: Push Backend Image to Docker Hub
#         run: |
#           IMAGE_NAME="bigstan00/project-mern-backend"
#           TAG="latest"
#           # Check if the image with the latest tag already exists on Docker Hub
#           EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
#             https://hub.docker.com/v2/repositories/$IMAGE_NAME/tags/$TAG)
#           if [ "$EXISTS" -eq 200 ]; then
#             echo "Backend image $IMAGE_NAME:$TAG already exists. Skipping push."
#             exit 0
#           else
#             echo "Backend image not found. Pushing to Docker Hub..."
#             docker tag backend:1 $IMAGE_NAME:$TAG
#             docker push $IMAGE_NAME:$TAG
#           fi
#       - name: Verify images
#         run: |
#           docker images
#       - name: Run Docker Compose Locally
#         run: |
#           docker compose down --remove-orphans  # Ensure no conflicting containers
#           docker compose -f docker-compose.frontend.yaml up -d  # Start the entire stack
#       - name: Verify Containers Are Running
#         run: |
#           docker ps
#       - name: Check Prometheus Targets
#         run: |
#           curl -f http://localhost:9090/targets || exit 1  # Validate Prometheus is scraping
#       - name: Check Alertmanager
#         run: |
#           curl -f http://localhost:9093 || exit 1
#       - name: Check Node Exporter
#         run: |
#           curl -f http://localhost:9100 || exit 1
#       - name: Run Docker Compose Locally
#         run: |
#           docker compose down --remove-orphans  # Ensure no conflicting containers
#           docker compose -f docker-compose.backend.yaml up -d  # Start the entire stack
#       - name: Verify Containers Are Running
#         run: |
#           docker ps
#       - name: Check NGINX Configuration
#         run: |
#           docker exec nginx-cont nginx -t  # Validate NGINX config


name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Frontend Image
        run: |
          cd frontend
          docker build -t frontend:1 .

      - name: Push Frontend Image to Docker Hub
        run: |
          IMAGE_NAME="bigstan00/project-mern-frontend"
          TAG="latest"
          EXISTS=$(curl -s -o /dev/null -w "%{http_code}" https://hub.docker.com/v2/repositories/$IMAGE_NAME/tags/$TAG)
          if [ "$EXISTS" -eq 200 ]; then
            echo "Frontend image $IMAGE_NAME:$TAG already exists. Skipping push."
            exit 0
          else
            echo "Frontend image not found. Pushing to Docker Hub..."
            docker tag frontend:1 $IMAGE_NAME:$TAG
            docker push $IMAGE_NAME:$TAG
          fi

      - name: Build Backend Image
        run: |
          cd backend
          docker build -t backend:1 .

      - name: Push Backend Image to Docker Hub
        run: |
          IMAGE_NAME="bigstan00/project-mern-backend"
          TAG="latest"
          EXISTS=$(curl -s -o /dev/null -w "%{http_code}" https://hub.docker.com/v2/repositories/$IMAGE_NAME/tags/$TAG)
          if [ "$EXISTS" -eq 200 ]; then
            echo "Backend image $IMAGE_NAME:$TAG already exists. Skipping push."
            exit 0
          else
            echo "Backend image not found. Pushing to Docker Hub..."
            docker tag backend:1 $IMAGE_NAME:$TAG
            docker push $IMAGE_NAME:$TAG
          fi

      - name: Verify images
        run: |
          docker images

      - name: Run Docker Compose Frontend Locally
        run: |
          docker compose -f docker-compose.frontend.yaml up -d
          
      - name: Verify Frontend Containers Are Running
        run: |
          docker ps

      - name: Check Prometheus Targets
        run: |
          curl -f http://localhost:9090/targets || exit 1

      - name: Check Alertmanager
        run: |
          curl -f http://localhost:9093 || exit 1

      - name: Check Node Exporter
        run: |
          curl -f http://localhost:9100 || exit 1

      - name: Run Docker Compose Backend Locally
        run: |
          docker compose -f docker-compose.backend.yaml up -d

      - name: Verify Backend Containers Are Running
        run: |
          docker ps

      - name: Check NGINX Configuration
        run: |
          docker exec nginx-cont nginx -t
