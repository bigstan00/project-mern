services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_cont-1
    restart: always
    environment:
      - MONGODB_URL=${DB_URL}
      - PORT=${PORT}
    volumes:
      - backend_data:/app/data
    networks:
      - my_network1
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_cont-1
    restart: always
    ports:
      - "3000:3000"
    networks:
      - my_network1
    depends_on:
      - backend
  
  nginx:
    image: nginx:latest
    container_name: nginx-cont-1
    ports:
      - "3500:80"  # Expose NGINX on port 80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Mount your custom NGINX config
    networks:
      - my_network1
    restart: always
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter-1
    restart: always
    volumes:
      - /proc:/host/proc:ro,rslave
      - /sys:/host/sys:ro,rslave
      - /:/rootfs:ro,rslave
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.powersupplyclass'
    ports:
      - "9100:9100"
    networks:
      - my_network1


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus_service-1
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - my_network1
    

  alertmanager:
    image: prom/alertmanager:latest
    restart: always
    container_name: alertmgr-1
    ports:
      - "9093:9093"
    volumes:
      - "./alert-manager:/config"
      - alert-manager-data:/data
    command:
      - '--config.file=/config/alertmanager.yaml'
      - '--log.level=debug'
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - my_network1
networks:
  my_network1:
    external: true


volumes:
  backend_data: {}
  prometheus-data: {}
  alert-manager-data: {}
  nginx.conf: {}



